{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","hooks/useFetchGifs.js","components/GifGridItem.js","components/GifGrid.js","components/GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cat","type","value","onChange","target","placeholder","getGifs","category","a","url","encodeURI","fetch","response","json","data","gifs","map","gif","id","title","images","downsized_medium","console","log","useFetchGifs","loading","state","setstate","useEffect","then","imgs","GifGridItem","className","src","alt","GifGrid","img","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"2MAoCeA,EAjCK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEHC,mBAAS,IAFN,mBAEhCC,EAFgC,KAEpBC,EAFoB,KAiBvC,OACI,sBAAMC,SAVW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAG,OAAKP,GAAL,mBAAoBO,OACrCN,EAAc,MAKlB,SACI,uBACIO,KAAK,OACLC,MAAQT,EACRU,SAlBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,QAkBfG,YAAY,kC,uBCxBfC,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEbC,EAFa,gDAEmCC,UAAUH,GAF7C,+DAGII,MAAMF,GAHV,cAGbG,EAHa,gBAIEA,EAASC,OAJX,uBAIZC,EAJY,EAIZA,KACDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAG1Ca,QAAQC,IAAI,SAAUR,GAZH,kBAcbA,GAda,4CAAH,sDCyBJS,EAxBM,SAACjB,GAAc,IAAD,EACNf,mBAAS,CAC/BsB,KAAM,GACNW,SAAS,IAHmB,mBACzBC,EADyB,KAClBC,EADkB,KAqBhC,OAVAC,qBAAW,WACPtB,EAAQC,GACHsB,MAAM,SAAAC,GACHH,EAAS,CACLb,KAAMgB,EACNL,SAAS,SAGtB,CAAClB,IAEGmB,GCPIK,EAdK,SAAC,GAAkB,IAAjBZ,EAAgB,EAAhBA,MAAMV,EAAU,EAAVA,IACxB,OACI,sBAAKuB,UAAU,yCAAf,UACI,qBAAKC,IAAMxB,EAAMyB,IAAMf,IACvB,4BAAKA,QCuBFgB,EAzBC,SAAC,GAAkB,IAAhB5B,EAAe,EAAfA,SAAe,EAEGiB,EAAajB,GAAjCa,EAFiB,EAEtBN,KAAaW,EAFS,EAETA,QAErB,OACI,qCACI,oBAAIO,UAAU,oCAAd,SAAoDzB,IAElDkB,GAAW,oBAAIO,UAAU,oCAAd,wBAEb,qBAAKA,UAAU,YAAf,SAEQZ,EAAOJ,KAAI,SAAAoB,GAAG,OACV,cAAC,EAAD,CAEIjB,MAAQiB,EAAIjB,MACZV,IAAM2B,EAAI3B,KAFJ2B,EAAIlB,aCSvBmB,EAvBM,WAAO,IAAD,EAEa7C,mBAAS,CAAC,cAFvB,mBAEhB8C,EAFgB,KAEJ/C,EAFI,KAIvB,OACI,qCACG,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBACA,6BAEQ+C,EAAWtB,KAAI,SAAAhB,GAAG,OACb,cAAC,EAAD,CAEIO,SAAWP,GADLA,YCblCuC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.2b03e6f1.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\r\nimport React, { useState } from 'react'\r\n\r\nconst AddCategory = ({ setCategories }) => {\r\n\r\n    const [inputValue, setInputValue] = useState('')\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        \r\n        if (inputValue.trim().length > 2) {\r\n            setCategories(cat => [inputValue, ...cat]);\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit= { handleSubmit }>\r\n            <input\r\n                type=\"text\"\r\n                value={ inputValue }\r\n                onChange={ handleInputChange }\r\n                placeholder=\"Search your favourite gif!\"\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddCategory\r\n","\r\n\r\nexport const getGifs = async(category) => {\r\n\r\n    const url = `http://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=iPlnzzkiQMdEmc7mA81SQAqz53frGnAQ`;\r\n    const response = await fetch(url);\r\n    const {data} = await response.json();\r\n    const gifs = data.map(gif => {\r\n        return {\r\n            id: gif.id,\r\n            title: gif.title,\r\n            url: gif.images?.downsized_medium.url\r\n        }\r\n    })\r\n    console.log('~ gifs', gifs);\r\n\r\n   return gifs;\r\n}","import { useState, useEffect} from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\n const useFetchGifs = (category) => {\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    /*\r\n        This means I want to execute whatever\r\n        is inside only the first time\r\n        this component is rendered.\r\n    */\r\n    useEffect( () => {\r\n        getGifs(category)\r\n            .then( imgs => {\r\n                setstate({\r\n                    data: imgs,\r\n                    loading: false\r\n                });\r\n            });\r\n    }, [category]);\r\n\r\n    return state;\r\n }\r\n \r\n export default useFetchGifs\r\n ","import PropTypes from 'prop-types'\r\nimport React from 'react'\r\n\r\nconst GifGridItem = ({title,url }) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={ url } alt={ title } />\r\n            <p>{ title }</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nGifGridItem.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    url: PropTypes.string.isRequired\r\n}\r\n\r\nexport default GifGridItem\r\n","\r\nimport React from 'react';\r\nimport useFetchGifs from '../hooks/useFetchGifs';\r\nimport GifGridItem from './GifGridItem';\r\n\r\nconst GifGrid = ({ category }) => {\r\n\r\n    const { data:images, loading } = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\">{ category }</h3>\r\n\r\n            { loading && <h4 className=\" animate__animated animate__flash\">Loading...</h4> }\r\n            \r\n            <div className=\"card-grid\">\r\n                {\r\n                    images.map(img => (\r\n                        <GifGridItem\r\n                            key={ img.id }\r\n                            title={ img.title }\r\n                            url={ img.url }\r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifGrid;\r\n","\r\nimport React, { useState } from 'react'\r\nimport AddCategory from './AddCategory';\r\nimport GifGrid from './GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['Dr. House']);\r\n\r\n    return (\r\n        <>\r\n           <h2>GifExpertApp</h2>\r\n           <AddCategory setCategories={ setCategories } />\r\n           <hr />\r\n           <ol>\r\n               {\r\n                   categories.map(cat =>( \r\n                        <GifGrid\r\n                            key={ cat }\r\n                            category={ cat }\r\n                        />\r\n                   ))\r\n               }\r\n           </ol>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport GifExpertApp from './components/GifExpertApp';\r\n\r\nReactDOM.render(\r\n  <GifExpertApp />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}